define(["ytos.domlib"],function(a){return yTos.utils.namespace("yTos.helpers.WishList.LoginLayer"),yTos.helpers.WishList.LoginLayer=yTos.helpers.base.extend({scope:"addItem",initialize:function(){},globalMessages:{"yTos::WishList::WishListLoginFormReady":"yTos::OpenLayer"},localMessages:{"yTos::WishList::LoginNeeded":"onLoginRequested"},form:{success:"yTos::Account::UserLoggedIn",error:"yTos::Account::UserLoginError"},onLoginRequested:function(a){this.enableIframeLogin=a.enableIframeLogin;var b={};$Y.safeGet(yTos.configuration,"UserConsentsSettings.Enabled")?(this.callbackCache=a.callback,b={"yTos::Account::UserConsentsAlreadyConsented":this.callbackCache,"yTos::Account::UserHasAgreedUserConsents":this.callbackCache,"yTos::Account::UserConsentsErrorOnSubmit":this.callbackCache,"yTos::Account::UserHasDeclinedUserConsents":this.removeUserConsentsWatchOne}):b[this.form.success]=a.callback,$Y.watchOne(b),this.getWishListLoginLayerContent(a.layerContextArea)},removeUserConsentsWatchOne:function(){$Y.unWatch({"yTos::Account::UserConsentsAlreadyConsented":this.callbackCache,"yTos::Account::UserHasAgreedUserConsents":this.callbackCache,"yTos::Account::UserConsentsErrorOnSubmit":this.callbackCache}),this.callbackCache=null},getWishListLoginLayerContent:function(b){if($Y.isCORSSupported()){var c=$Y.safeGet(yTos.configuration,"IdpSettings.IsIdpEnabled"),d=c?"RenderIdpLoginLayer":"RenderLoginLayer";this.getHTML({Plugin:"Account",Action:d},{data:{layerContextArea:b},success:function(a){this.notify("yTos::WishList::WishListLoginFormReady",{content:a})}.bind(this)})}else if(this.enableIframeLogin){yTos.cookies.del("LOGGED");var e=yTos.domains.HostSecure+"/"+$Y.isoCode()+"/Account/User/RenderIframeLoginLayer";e+="?layerContextArea="+b+"Iframe=true",this.$loginIframe=a("<iframe/>"),this.$loginIframe.attr("src",e),this.notify("yTos::WishList::WishListLoginFormReady",{content:this.$loginIframe}),this.checkLoginTimer=setInterval(function(){yTos.cookies.get("LOGGED")&&(yTos.cookies.set("LOGGED",!1),yTos.cookies.del("LOGGED"),clearInterval(this.checkLoginTimer),$Y.notify("yTos::Account::UserLoggedIn",{content:this.$loginIframe.html()}))}.bind(this),500)}else $Y.redirect(yTos.domains.HostSecure+"/"+$Y.isoCode()+"/Account/User/Login")}}),yTos.helpers.WishList.LoginLayer=new yTos.helpers.WishList.LoginLayer,$Y.notify("yTos::HelperLoaded::wishList.loginLayer",yTos.helpers.WishList.LoginLayer),yTos.helpers.WishList.LoginLayer});